<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>english word on 是不是很酷</title>
    <link>https://www.syst.top/tags/english-word/</link>
    <description>Recent content in english word on 是不是很酷</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 21 Feb 2023 18:23:51 +0800</lastBuildDate><atom:link href="https://www.syst.top/tags/english-word/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HelloWord一个go开发的学习英语单词工具</title>
      <link>https://www.syst.top/posts/go/helloword/</link>
      <pubDate>Tue, 21 Feb 2023 18:23:51 +0800</pubDate>
      
      <guid>https://www.syst.top/posts/go/helloword/</guid>
      <description>图片拍摄于2023年02月19日 杭州玉鸟集
背景 Hello Word是我在背单词过程中产生的一个想法。
在学习英语时，词汇量是非常重要的。但是仅仅死记硬背单词，没有语境感，效率是很低的。
虽然一些应用程序可以根据单词的多个词义为单词组成一小段句子，稍微增强语境感。但是单词仍然过于零散。
因此，我们是否可以将每天背诵的多个单词组合成一段小短文，以便复习这一批单词呢？这就是Hello Word的初衷。
当然，ChatGPT API暂时是实现这个想法的工具。 除此之外，程序还配套了几个周边小游戏。
单词短语推送器 指定单词数量，随机选择单词，生成一段小短文，推送到用户指定平台。
这个脚本有以下可选项：
 files：默认导入 CET4.txt 单词文件，你可以通过逗号同时导入多个单词文件，它们都存储在 library 文件夹下。 spec：表示推送频率设置，默认为每小时生成一个新的短语，具体时间规则使用的是 robif/cron 库，请参考该库的文档自行设置。 word-number：表示生成一次短语使用的单词数量，默认为 5 个，最多不超过 10 个  效果
单词选择规则，
 默认:随机 最近最少推送(todo)  单词游戏 单词接龙 这是一个单词接龙游戏，游戏开始时系统会随机选择一个单词。玩家需要以该单词的最后一个字母为开头输入一个新单词，接着程序又以玩家输入单词的最后一个字母为开头输出新单词。游戏会持续进行，直到有一方出现错误。
在一局游戏中，每个单词只能被使用一次。
使用
效果
后续规划
 单词正确性校验，是否是合法的英语单词(todo) 超时控制，用户每个回合指定时间内未输出，游戏结束(todo) 错误机会，一局游戏可以错误次数(todo)  其他游戏 单词拼写(todo)、单词填空(todo) 项目地址在: https://github.com/wuqinqiang/helloword
觉得不错可以点个star，感兴趣可以一起开发。</description>
    </item>
    
  </channel>
</rss>
